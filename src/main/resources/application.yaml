obscenities: хуе, хуй, ебат, ебан, ебал, бляд, сука, сучка, случка, сученок,пизд, жоп, дура, дурень, придурок, педик, педер,
  пидор, пидер, говн, гавн, муда, бдуд, онани, лесби, гомосе, гомик,
  fuck, ass, bitch, bull shitt, dumn, piss, faggot, dickhead, shit, motherfucher, dick, ount
server:
  port: 8443
  ssl:
    enabled: true
    key-store: classpath:keystore.p12
    key-store-password: 5757507
    keyStoreType: PKCS12
    keyAlias: tomcat
  http:
    port: 8189
  servlet:
    context-path: /altma


spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=altma_db
    username: postgres
    password: 5757507

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp:
          use_jdbc_metadata_defaults: false
  thymeleaf:
    encoding: UTF-8

  security:
    oauth2:
      client:
        registration:
          vk:
            clientId: 7649936
            clientSecret: SmVfOLAji1r1MT5JMI6q
            tokenName: code
            authenticationScheme: query
            clientAuthenticationScheme: form
            grant-type: authorization_code
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - email
              - first_name
              - last_name
              - photo_max
          google:
            clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
            clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 3945645322201068
            clientSecret: dc77ab9db4d9e8e3a22d9aa91cb51e95
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: 7a3e122068db1a452173
            clientSecret: bf38b2dca2a4491abc24fb7a61f81932cc4a5917
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          vk:
            authorizationUri: https://oauth.vk.com/authorize?v=5.95
            tokenUri: https://oauth.vk.com/access_token
            userInfoUri: https://api.vk.com/method/users.get?{user_id}&v=5.95&fields=id,photo_id,verified,sex,bdate,city,country,photo_max,home_town,has_photo&display=popup&lang=ru&access_token
            userNameAttributeName: id
            registrationId: vk
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:8189/altma/oauth2/redirect
#      - myandroidapp://oauth2/redirect
#      - myiosapp://oauth2/redirect
